@model test3.Models.Cours
@{
    ViewBag.ac = 5;
}

<h2>Thêm môn học</h2>
<div class="panel panel-default">
    <div class="panel-body">
        <div class="table-responsive">
            <form action="@Url.Action("ThemMoiMonHoc", "QLMH")" method="post" class="form-horizontal">
                @Html.HiddenFor(model => model.CourseID)

                <div class="form-group">
                    <label for="CourseName" class="col-md-2 control-label">Tên môn:</label>
                    <div class="col-md-3">
                        <input type="text" name="CourseName" id="CourseName" class="form-control" required>
                    </div>
                </div>

                <div class="form-group">
                    <label for="Description" class="col-md-2 control-label">Mô tả:</label>
                    <div class="col-md-3">
                        <input type="text" name="Description" id="Description" class="form-control" required>
                    </div>
                </div>

                <div class="form-group">
                    <label for="Credits" class="col-md-2 control-label">Tín chỉ:</label>
                    <div class="col-md-3">
                        <input type="number" name="Credits" id="Credits" class="form-control" required min="1" max="3" oninput="validity.valid||(value='');">
                    </div>
                </div>

                <div class="form-group">
                    <label class="control-label col-md-2" for="DepartmentID">Tên khoa:</label>
                    <div class="col-md-3">
                        @{
                            test3.Models.QuanliSVEntities db = new test3.Models.QuanliSVEntities();
                            List<test3.Models.Department> dsKhoa = db.Departments.ToList();
                        }

                        @Html.DropDownListFor(model => model.DepartmentID, new SelectList(dsKhoa, "DepartmentID", "DepartmentName"), "Chọn khoa...", new { @class = "form-control", id = "DepartmentID", required = "required" })
                    </div>
                </div>

                <div class="form-group">
                    <label class="control-label col-md-2" for="SemesterID">Kì:</label>
                    <div class="col-md-3">
                        @{
                            List<test3.Models.Semester> dsKi = db.Semesters.ToList();
                        }

                        @Html.DropDownListFor(model => model.SemesterID, new SelectList(dsKi, "SemesterID", "SemesterName"), "Chọn kì...", new { @class = "form-control", id = "SemesterID", required = "required" })
                    </div>
                </div>


                <div class="form-group">
                    <label class="control-label col-md-2" for="ClassID">Tên lớp:</label>
                    <div class="col-md-3">
                        @{
                            List<test3.Models.Class> dslop = db.Classes.ToList();
                        }

                        @Html.DropDownListFor(model => model.ClassID, new SelectList(dslop, "ClassID", "ClassName"), "Chọn lớp...", new { @class = "form-control", id = "ClassID", required = "required" })
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-offset-2 col-md-3" id="error-message" style="color: red" ,font-family: Roboto, RobotoDraft, Helvetica, Arial, sans-serif"></div>
                </div>
                <div class="form-group">
                    <div class="col-md-offset-2 col-md-3">
                        <input type="button" value="Thêm" id="btn-them" class="btn btn-primary">
                    </div>
                </div>

                <div>
                    @Html.ActionLink("Back to List", "DanhSachMonHoc")
                </div>
            </form>
        </div>
    </div>
</div>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@10"></script>
<script>
    $(document).ready(function () {
        $("#btn-them").click(function () {
            var form = $('form')[0];
            if (form.checkValidity() === false) {
                form.reportValidity();
                return;
            }
            var formData = new FormData(form);
            $.ajax({
                type: "POST",
                data: formData,
                contentType: "application/json; charset=utf-8",
                url: window.location.origin + '/QLMH/ThemMoiMonHoc',
                processData: false,
                contentType: false,
                cache: false,
                success: function (response) {
                    Swal.fire({
                        title: 'Thêm thành công',
                        text: 'Bạn có muốn quay trở lại danh sách môn học không?',
                        icon: 'success',
                        showCancelButton: true,
                        confirmButtonText: 'Có',
                        cancelButtonText: 'Không'
                    }).then((result) => {
                        if (result.isConfirmed) {
                            window.location.href = window.location.origin + '/QLMH/DanhSachMonHoc';
                        } else {
                        }
                    });
                },
                error: function (response) {
                    if (response.responseText === "Môn học đã tồn tại .") {
                        $("#error-message").text(response.responseText);
                    } else {
                        alert("Thêm mới thất bại");
                    }
                }
            });
        });
    });
</script>
