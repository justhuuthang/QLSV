@model test3.Models.Cours

@{
    ViewBag.Title = "Suathongtin";
}

<h2>Thông tin môn học</h2>

<script>
    @if (ViewBag.Error != null)
    {
        <text>
            $(document).ready(function () {
                alert("@Html.Raw(ViewBag.Error)");
            });
        </text>
    }
</script>



<form action="~/QLMH/Suathongtin" method="post" class="form-horizontal">
    @Html.HiddenFor(model => model.CourseID)

    <div class="form-group">
        <label for="CourseName" class="col-md-2 control-label">Tên môn:</label>
        <div class="col-md-3">
            <input type="text" name="CourseName" id="CourseName" class="form-control" value="@Model.CourseName" required>
        </div>
    </div>
    <div class="form-group">
        <label for="Description" class="col-md-2 control-label">Mô tả:</label>
        <div class="col-md-3">
            <input type="text" name="Description" id="Description" class="form-control" value="@Model.Description" required>
        </div>
    </div>

    <div class="form-group">
        <label for="Credits" class="col-md-2 control-label">Tín chỉ:</label>
        <div class="col-md-3">
            <input type="number" name="Credits" id="Credits" class="form-control" value="@Model.Credits" required min="1" max="3" oninput="validity.valid||(value='');">
        </div>
    </div>





    <div class="form-group">
        <label class="control-label col-md-2" for="DepartmentID">Tên khoa:</label>
        <div class="col-md-3">
            @{
                test3.Models.QuanliSVEntities db = new test3.Models.QuanliSVEntities();
                List<test3.Models.Department> dsKhoa = db.Departments.ToList();
            }

            @Html.DropDownListFor(model => model.DepartmentID, new SelectList(dsKhoa, "DepartmentID", "DepartmentName"), "Chọn khoa...", new { @class = "form-control", id = "DepartmentID" })
        </div>
    </div>

    <div class="form-group">
        <label for="SemesterID" class="col-md-2 control-label">Kì học:</label>
        <div class="col-md-3">
            <input type="text" name="SemesterID" id="SemesterID" class="form-control" value="@Model.SemesterID" required>
        </div>
    </div>



    <div class="form-group">
        <label class="control-label col-md-2" for="ClassID">Tên lớp:</label>
        <div class="col-md-3">
            @{
                List<test3.Models.Class> dslop = db.Classes.ToList();
            }

            @Html.DropDownListFor(model => model.ClassID, new SelectList(dslop, "ClassID", "ClassName"), "Chọn lớp...", new { @class = "form-control", id = "ClassID" })
        </div>
    </div>
    <div class="form-group">
        <div class="col-md-offset-2 col-md-3" id="error-message" style="color: red" ,font-family: Roboto, RobotoDraft, Helvetica, Arial, sans-serif"></div>
    </div>
    <div class="form-group">
        <div class="col-md-offset-2 col-md-3">
            <input type="button" id="btn-sua" name="action" value="Sửa" class="btn btn-primary">
        </div>
    </div>

    <div>
        @Html.ActionLink("Back to List", "DanhSachMonHoc")
    </div>
</form>

<style>
    .btn-primary-margin {
        margin-right: 70px;
    }
</style>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@10"></script>
<script>
    $(document).ready(function () {
        $("#btn-sua").click(function () {
            var form = $('form')[0];
            if (form.checkValidity() === false) {
                form.reportValidity();
                return;
            }
            var formData = new FormData(form);
            $.ajax({
                type: "POST",
                data: formData,
                contentType: "application/json; charset=utf-8",
                url: window.location.origin + '/QLMH/Suathongtin',
                processData: false,
                contentType: false,
                cache: false,
                success: function (response) {
                    Swal.fire({
                        title: 'Sửa thành công',
                        text: 'Bạn có muốn quay trở lại danh sách môn học không?',
                        icon: 'success',
                        showCancelButton: true,
                        confirmButtonText: 'Có',
                        cancelButtonText: 'Không'
                    }).then((result) => {
                        if (result.isConfirmed) {
                            window.location.href = window.location.origin + '/QLMH/DanhSachMonHoc';
                        } else {
                        }
                    });
                },
                error: function (response) {
                    if (response.responseText === "Môn học đã tồn tại.") {
                        $("#error-message").text(response.responseText);
                    } else {
                        alert("Sửa thất bại");
                    }
                }
            });
        });
    });
   
</script>
