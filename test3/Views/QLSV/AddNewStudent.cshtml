@model test3.Models.Student
@{
    ViewBag.ac = 3;
}

<h2>Thêm sinh viên</h2>
<div class="panel panel-default">
    <div class="panel-body">
        <div class="table-responsive">
            <form action="@Url.Action("AddNewStudent", "QLSV")" method="post" class="form-horizontal">
                @Html.HiddenFor(model => model.StudentID)

                <div class="form-group">
                    <label for="FullName" class="col-md-2 control-label">Tên sinh viên:</label>
                    <div class="col-md-3">
                        <input type="text" name="FullName" id="FullName" class="form-control" required>
                    </div>
                </div>

                <div class="form-group">
                    <label for="DateOfBirth" class="col-md-2 control-label">Ngày sinh:</label>
                    <div class="col-md-3">
                        <input type="date" name="DateOfBirth" id="DateOfBirth" class="form-control" required>
                    </div>
                </div>

                <div class="form-group">
                    <label for="Gender" class="col-md-2 control-label">Giới tính:</label>
                    <div class="col-md-3">
                        <div>
                            @Html.RadioButtonFor(model => model.Gender, true, new { id = "Male", name = "Gender" }) Nam
                            @Html.RadioButtonFor(model => model.Gender, false, new { id = "Female", name = "Gender" }) Nữ
                        </div>
                    </div>
                </div>

                <div class="form-group">
                    <label for="Address" class="col-md-2 control-label">Địa chỉ:</label>
                    <div class="col-md-3">
                        <textarea name="Address" id="Address" class="form-control" required></textarea>
                    </div>
                </div>

                <div class="form-group">
                    <label for="ContactNumber" class="col-md-2 control-label">Số điện thoại:</label>
                    <div class="col-md-3">
                        <input type="text" name="ContactNumber" id="ContactNumber" class="form-control" required>
                    </div>
                </div>

                <div class="form-group">
                    <label for="Email" class="col-md-2 control-label">Email:</label>
                    <div class="col-md-3">
                        <input type="email" name="Email" id="Email" class="form-control" required>
                    </div>
                </div>

                <div class="form-group">
                    <label class="control-label col-md-2" for="DepartmentID">Tên khoa:</label>
                    <div class="col-md-3">
                        @{
                            test3.Models.QuanliSVEntities db = new test3.Models.QuanliSVEntities();
                            List<test3.Models.Department> dsKhoa = db.Departments.ToList();
                        }

                        @Html.DropDownListFor(model => model.DepartmentID, new SelectList(dsKhoa, "DepartmentID", "DepartmentName"), "Chọn khoa...", new { @class = "form-control", id = "DepartmentID" })
                    </div>
                </div>

                <div class="form-group">
                    <label class="control-label col-md-2" for="ClassID">Tên lớp:</label>
                    <div class="col-md-3">
                        @Html.DropDownListFor(model => model.ClassID, new SelectList(Enumerable.Empty<SelectListItem>(), "Value", "Text"), "Chọn lớp...", new { @class = "form-control", id = "ClassID" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-3" id="error-message" style="color: red" ,font-family: Roboto, RobotoDraft, Helvetica, Arial, sans-serif"></div>
                </div>
                <div class="form-group">
                    <div class="col-md-offset-2 col-md-3">
                        <input type="button" value="Thêm" id="btn-them" class="btn btn-primary">
                    </div>
                </div>

                <div>
                    @Html.ActionLink("Back to List", "DanhSachSinhVien")
                </div>
            </form>
        </div>
    </div>
</div>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@10"></script>
<script>
    $(document).ready(function () {
        $("#btn-them").click(function () {
            var form = $('form')[0];
            if (form.checkValidity() === false) {
                form.reportValidity();
                return;
            }
            var dob = new Date($("#DateOfBirth").val());
            var today = new Date();
            var age = today.getFullYear() - dob.getFullYear();

            if (today.getMonth() < dob.getMonth() || (today.getMonth() === dob.getMonth() && today.getDate() < dob.getDate())) {
                age--;
            }

            if (age < 18) {
                $("#error-message").text("Sinh viên phải lớn hơn 18 tuổi.");
                return;
            }
            var phoneNumber = $("#ContactNumber").val();
            var phoneRegex = /^\d{10}$/; 
            if (!phoneRegex.test(phoneNumber)) {
                $("#error-message").text("Số điện thoại không đúng định dạng.");
                return;
            }
            var formData = new FormData(form);
            $.ajax({
                type: "POST",
                data: formData,
                contentType: "application/json; charset=utf-8",
                url: window.location.origin + '/QLSV/AddNewStudent',
                processData: false,
                contentType: false,
                cache: false,
                success: function (response) {
                    Swal.fire({
                        title: 'Thêm thành công',
                        text: 'Bạn có muốn quay trở lại danh sách sinh viên không?',
                        icon: 'success',
                        showCancelButton: true,
                        confirmButtonText: 'Có',
                        cancelButtonText: 'Không'
                    }).then((result) => {
                        if (result.isConfirmed) {
                            window.location.href = window.location.origin + '/QLSV/DanhSachSinhVien';
                        } else {
                        }
                    });
                },
                error: function (response) {
                    if (response.responseText === "Sinh viên đã tồn tại với số điện thoại này.") {
                        $("#error-message").text(response.responseText);
                    } else {
                        alert("Thêm mới thất bại");
                    }
                }
            });
        });
    });
    $(document).ready(function () {
        $("#DepartmentID").change(function () {
            var selectedDepartmentId = $(this).val();

            $.ajax({
                url: '/QLSV/GetClassesByDepartment',
                type: 'GET',
                dataType: 'json',
                data: { departmentId: selectedDepartmentId },
                success: function (classes) {
                    var classDropdown = $("#ClassID");
                    classDropdown.find('option').not(':first').remove();
                    $.each(classes, function (index, cls) {
                        classDropdown.append($('<option></option>').attr('value', cls.Value).text(cls.Text));
                    });
                },
                error: function (error) {
                    console.log(error);
                }
            });
        });
    });
    </script>